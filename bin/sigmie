#!/usr/bin/env php
<?php
$autoload = false;
foreach ([
    __DIR__ . '/../../../../../../vendor/autoload.php', //Monorepo global folder
    __DIR__ . '/../../../vendor/autoload.php', //Monorepo local folder
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../../vendor/autoload.php',
    __DIR__ . '/../vendor/autoload.php'
] as $file) {
    if (file_exists($file)) {
        $autoload = true;
        require $file;

        break;
    }
}

if ($autoload === false) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
            '    composer install' . PHP_EOL . PHP_EOL .
            'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );

    die(1);
}


use Sigmie\Cli\Commands\Authenticate;
use Sigmie\Cli\Commands\Index;
use Sigmie\Cli\Commands\Alias;
use Symfony\Component\Console\Application;
use Sigmie\Cli\Commands\Documents;
use Sigmie\Cli\ErrorListener;
use Symfony\Component\Console\ConsoleEvents;
use Symfony\Component\Console\Event\ConsoleErrorEvent;
use Symfony\Component\Console\Event\ConsoleEvent;
use Symfony\Component\EventDispatcher\EventDispatcher;
use Sigmie\Cli\Commands\Analyze;

$dispatcher = new EventDispatcher;
$dispatcher->addListener(ConsoleEvents::ERROR, [new ErrorListener(), 'onConsoleError']);

$application = new Application();
$application->setDispatcher($dispatcher);

$application->addCommands([
    new Authenticate(),
    new Index\ListIndices(),
    new Documents\Show(),
    new Documents\ListDocs(),
    new Index\Create(),
    new Index\Clear(),
    new Index\Alias(),
    new Alias\SwitchAlias(),
    new Analyze\Text()
]);

$application->run();
